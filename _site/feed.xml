<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>The Agile Snowball</title>
    <description>Lessons learned and challenges faced in trying to keep an ASP.NET and SQL Server web application agile enough to take advantage of the latest tools, technologies and methodologies.
</description>
    <link>http://agilesnowball.com/</link>
    <atom:link href="http://agilesnowball.com/feed.xml" rel="self" type="application/rss+xml" />
    <pubDate>Wed, 20 Aug 2014 15:21:19 +0100</pubDate>
    <lastBuildDate>Wed, 20 Aug 2014 15:21:19 +0100</lastBuildDate>
    <generator>Jekyll v2.3.0</generator>
    
      
      <item>
        <title>From simple to full recovery model in SQL Server</title>
        <description>&lt;p&gt;Have you got a highly utilised SQL Server database that you’re backing up with
the simple recovery model, and now you are wondering how to move to the full
recovery model? Well this post is for you!&lt;/p&gt;

&lt;h1 id=&quot;simple-vs-full&quot;&gt;Simple vs Full&lt;/h1&gt;
&lt;p&gt;In a nutshell, the difference between SQL Server’s simple and full recovery
models is whether or not the transaction log file is part of your backup
strategy.&lt;/p&gt;

&lt;p&gt;In simple mode, the transaction log is ignored, so you can only restore to your
most recent full or differential database backup.&lt;/p&gt;

&lt;p&gt;In full mode, you can restore to your most recent full / differential backup and
then continue to restore log backups that will roll your database further and
further forwards until (hopefully) right up to the moment of failure.&lt;/p&gt;

&lt;h1 id=&quot;transaction-log-backups&quot;&gt;Transaction log backups&lt;/h1&gt;
&lt;p&gt;Unlike a differential database backup, a transaction log backup only records the
changes that have been made to the database since the last transaction log
backup, rather than containing all the changes since the last full backup. This
has two important consequences:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;They are quick to make and (typically) quite small.&lt;/li&gt;
  &lt;li&gt;You need an unbroken chain of all the transaction log backups that lead from
the most recent full or differential backup all the way forwards in time to the
point of recovery.ALL of them, not just the most recent one.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Both of these points are very important. Firstly, because of the speed, it’s
completely possible to schedule transaction log backups to occur every few
minutes, which means you can dramatically reduce your potential data loss in the
event of a disaster.&lt;/p&gt;

&lt;p&gt;Secondly, you have to keep track of many more backup files. Imagine if you are
doing a differential backup once a day and transaction log backups every 15
minutes. That’s potentially 24*4 = 96 transaction log backups to keep track of
and restore.&lt;/p&gt;

&lt;h1 id=&quot;a-simple-example&quot;&gt;A simple example&lt;/h1&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-sql&quot; data-lang=&quot;sql&quot;&gt;&lt;span class=&quot;c1&quot;&gt;-- Weekly backup
&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;backup&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;database&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Test&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;to&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;disk&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&#39;C:&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\T&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;est.bak&#39;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;with&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;init&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;backup&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;log&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Test&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;to&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;disk&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&#39;C:&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\T&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;est.trn&#39;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;with&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;init&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;-- Daily backup
&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;backup&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;database&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Test&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;to&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;disk&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&#39;C:&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\T&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;est.dif&#39;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;with&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;init&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;differential&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;backup&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;log&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Test&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;to&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;disk&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&#39;C:&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\T&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;est.trn&#39;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;with&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;init&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;-- 15 minute backup
&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;backup&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;log&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Test&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;to&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;disk&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&#39;C:&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\T&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;est.trn&#39;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Here we see three simple sets of commands to perform weekly, daily and
quarter-hourly backup.&lt;/p&gt;

&lt;p&gt;At any given moment, the server will have 3 backup files: &lt;code&gt;Test.bak&lt;/code&gt;, &lt;code&gt;Test.dif&lt;/code&gt;
and &lt;code&gt;Test.trn&lt;/code&gt;. Notice that the weekly and daily backup includes a log backup
that reinitialises &lt;code&gt;Test.trn&lt;/code&gt;. This ensures that we only keep those transaction
logs that are needed.&lt;/p&gt;

&lt;p&gt;The 15 minute backup of the transaction log appends new backup sets to the end
of &lt;code&gt;Test.trn&lt;/code&gt;, so that there is only ever a single backup file containing all
of the transaction logs you need to restore.&lt;/p&gt;

&lt;h1 id=&quot;restoring-the-database&quot;&gt;Restoring the database&lt;/h1&gt;

&lt;p&gt;If you are using the above scripts, then you will have three backup files to
restore.&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-sql&quot; data-lang=&quot;sql&quot;&gt;&lt;span class=&quot;c1&quot;&gt;-- Restore the full and differential backups
&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;restore&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;database&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Test&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;disk&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&#39;C:&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\T&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;est.bak&#39;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;with&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;norecovery&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;restore&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;database&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Test&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;disk&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&#39;C:&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\T&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;est.dif&#39;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;with&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;norecovery&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;-- See how many files are in the transaction log backup
&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;restore&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;headeronly&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;disk&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&#39;C:&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\T&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;est.trn&#39;&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;-- Restore each transaction log backup in turn
&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;restore&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;database&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Test&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;disk&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&#39;C:&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\T&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;est.trn&#39;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;file&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;with&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;norecovery&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;restore&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;database&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Test&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;disk&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&#39;C:&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\T&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;est.trn&#39;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;file&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;with&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;norecovery&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;-- (Repeat for each backup in the set, note the incrementing file value)
&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;-- Bring the database back online
&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;restore&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;database&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Test&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;with&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;recovery&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

</description>
        <pubDate>Wed, 20 Aug 2014 14:42:00 +0100</pubDate>
        <link>http://agilesnowball.com/sqlserver/2014/08/20/from-simple-to-full-recovery-model.html</link>
        <guid isPermaLink="true">http://agilesnowball.com/sqlserver/2014/08/20/from-simple-to-full-recovery-model.html</guid>
        
        
        <category>sqlserver</category>
        
      </item>
      
    
      
    
      
    
      
    
      
    
      
      <item>
        <title>Welcome!</title>
        <description>&lt;p&gt;More than 10 years ago, we created a SaaS web application using the excitingly new technologies of C# and ASP.NET
backed by the less exciting but well understood SQL Server.&lt;/p&gt;

&lt;p&gt;Unsurprisingly, technology has moved on amazingly since the first architectural decisions were made in 2003, and
this blog attemopts to chronicle the challenges faced and lessons learned in the effort to feed and care for the
application over this large timeframe.&lt;/p&gt;

&lt;p&gt;Some of these lessons may be appropriate for new ventures starting out with the latest &amp;amp; greatest that technology
has to offer, while some may only been useful to those who are in a similar boat of trying to slowly move &amp;amp; improve
their ASP.NET technology without throwing everything away and starting again.&lt;/p&gt;

&lt;p&gt;For that reason, I’ve christened this blog “The agile snowball”, to acknowledge the challenges in keeping a successful,
and ever-growing web application agile enough to be able to take advantage of advancements in technology and
methodology.&lt;/p&gt;
</description>
        <pubDate>Sun, 17 Aug 2014 22:29:00 +0100</pubDate>
        <link>http://agilesnowball.com/general/2014/08/17/welcome.html</link>
        <guid isPermaLink="true">http://agilesnowball.com/general/2014/08/17/welcome.html</guid>
        
        
        <category>general</category>
        
      </item>
      
    
  </channel>
</rss>
